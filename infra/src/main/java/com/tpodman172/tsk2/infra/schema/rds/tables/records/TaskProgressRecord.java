/*
 * This file is generated by jOOQ.
 */
package com.tpodman172.tsk2.infra.schema.rds.tables.records;


import com.tpodman172.tsk2.infra.schema.rds.tables.TaskProgress;

import java.time.LocalDate;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskProgressRecord extends UpdatableRecordImpl<TaskProgressRecord> implements Record5<Long, LocalDate, Boolean, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -1779572030;

    /**
     * Setter for <code>tsk2.task_progress.task_id</code>.
     */
    public void setTaskId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>tsk2.task_progress.task_id</code>.
     */
    public Long getTaskId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>tsk2.task_progress.target_date</code>.
     */
    public void setTargetDate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>tsk2.task_progress.target_date</code>.
     */
    public LocalDate getTargetDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>tsk2.task_progress.completed</code>.
     */
    public void setCompleted(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>tsk2.task_progress.completed</code>.
     */
    public Boolean getCompleted() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>tsk2.task_progress.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>tsk2.task_progress.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>tsk2.task_progress.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>tsk2.task_progress.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, LocalDate> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, LocalDate, Boolean, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, LocalDate, Boolean, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TaskProgress.TASK_PROGRESS.TASK_ID;
    }

    @Override
    public Field<LocalDate> field2() {
        return TaskProgress.TASK_PROGRESS.TARGET_DATE;
    }

    @Override
    public Field<Boolean> field3() {
        return TaskProgress.TASK_PROGRESS.COMPLETED;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return TaskProgress.TASK_PROGRESS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return TaskProgress.TASK_PROGRESS.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getTaskId();
    }

    @Override
    public LocalDate component2() {
        return getTargetDate();
    }

    @Override
    public Boolean component3() {
        return getCompleted();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getTaskId();
    }

    @Override
    public LocalDate value2() {
        return getTargetDate();
    }

    @Override
    public Boolean value3() {
        return getCompleted();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdatedAt();
    }

    @Override
    public TaskProgressRecord value1(Long value) {
        setTaskId(value);
        return this;
    }

    @Override
    public TaskProgressRecord value2(LocalDate value) {
        setTargetDate(value);
        return this;
    }

    @Override
    public TaskProgressRecord value3(Boolean value) {
        setCompleted(value);
        return this;
    }

    @Override
    public TaskProgressRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TaskProgressRecord value5(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public TaskProgressRecord values(Long value1, LocalDate value2, Boolean value3, LocalDateTime value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskProgressRecord
     */
    public TaskProgressRecord() {
        super(TaskProgress.TASK_PROGRESS);
    }

    /**
     * Create a detached, initialised TaskProgressRecord
     */
    public TaskProgressRecord(Long taskId, LocalDate targetDate, Boolean completed, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(TaskProgress.TASK_PROGRESS);

        set(0, taskId);
        set(1, targetDate);
        set(2, completed);
        set(3, createdAt);
        set(4, updatedAt);
    }
}
