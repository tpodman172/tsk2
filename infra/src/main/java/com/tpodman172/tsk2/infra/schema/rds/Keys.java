/*
 * This file is generated by jOOQ.
 */
package com.tpodman172.tsk2.infra.schema.rds;


import com.tpodman172.tsk2.infra.schema.rds.tables.Achievement;
import com.tpodman172.tsk2.infra.schema.rds.tables.Task;
import com.tpodman172.tsk2.infra.schema.rds.tables.User;
import com.tpodman172.tsk2.infra.schema.rds.tables.records.AchievementRecord;
import com.tpodman172.tsk2.infra.schema.rds.tables.records.TaskRecord;
import com.tpodman172.tsk2.infra.schema.rds.tables.records.UserRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>tsk2</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TaskRecord, Long> IDENTITY_TASK = Identities0.IDENTITY_TASK;
    public static final Identity<UserRecord, Long> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AchievementRecord> KEY_ACHIEVEMENT_PRIMARY = UniqueKeys0.KEY_ACHIEVEMENT_PRIMARY;
    public static final UniqueKey<TaskRecord> KEY_TASK_PRIMARY = UniqueKeys0.KEY_TASK_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_USER_NAME = UniqueKeys0.KEY_USER_USER_NAME;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AchievementRecord, TaskRecord> ACHIEVEMENT_IBFK_1 = ForeignKeys0.ACHIEVEMENT_IBFK_1;
    public static final ForeignKey<TaskRecord, UserRecord> TASK_IBFK_1 = ForeignKeys0.TASK_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<TaskRecord, Long> IDENTITY_TASK = Internal.createIdentity(Task.TASK, Task.TASK.TASK_ID);
        public static Identity<UserRecord, Long> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.USER_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AchievementRecord> KEY_ACHIEVEMENT_PRIMARY = Internal.createUniqueKey(Achievement.ACHIEVEMENT, "KEY_achievement_PRIMARY", new TableField[] { Achievement.ACHIEVEMENT.TASK_ID, Achievement.ACHIEVEMENT.TARGET_DATE }, true);
        public static final UniqueKey<TaskRecord> KEY_TASK_PRIMARY = Internal.createUniqueKey(Task.TASK, "KEY_task_PRIMARY", new TableField[] { Task.TASK.TASK_ID }, true);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", new TableField[] { User.USER.USER_ID }, true);
        public static final UniqueKey<UserRecord> KEY_USER_USER_NAME = Internal.createUniqueKey(User.USER, "KEY_user_user_name", new TableField[] { User.USER.USER_NAME }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AchievementRecord, TaskRecord> ACHIEVEMENT_IBFK_1 = Internal.createForeignKey(Keys.KEY_TASK_PRIMARY, Achievement.ACHIEVEMENT, "achievement_ibfk_1", new TableField[] { Achievement.ACHIEVEMENT.TASK_ID }, true);
        public static final ForeignKey<TaskRecord, UserRecord> TASK_IBFK_1 = Internal.createForeignKey(Keys.KEY_USER_PRIMARY, Task.TASK, "task_ibfk_1", new TableField[] { Task.TASK.USER_ID }, true);
    }
}
