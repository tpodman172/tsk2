/*
 * This file is generated by jOOQ.
 */
package com.tpodman172.tsk2.infra.schema.rds.tables.records;


import com.tpodman172.tsk2.infra.schema.rds.tables.CompletedDailyTask;

import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompletedDailyTaskRecord extends UpdatableRecordImpl<CompletedDailyTaskRecord> implements Record4<Long, Date, Timestamp, Timestamp> {

    private static final long serialVersionUID = -1169716454;

    /**
     * Setter for <code>tsk2.completed_daily_task.task_id</code>.
     */
    public void setTaskId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>tsk2.completed_daily_task.task_id</code>.
     */
    public Long getTaskId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>tsk2.completed_daily_task.target_date</code>.
     */
    public void setTargetDate(Date value) {
        set(1, value);
    }

    /**
     * Getter for <code>tsk2.completed_daily_task.target_date</code>.
     */
    public Date getTargetDate() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>tsk2.completed_daily_task.created_at</code>.
     */
    public void setCreatedAt(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>tsk2.completed_daily_task.created_at</code>.
     */
    public Timestamp getCreatedAt() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>tsk2.completed_daily_task.updated_at</code>.
     */
    public void setUpdatedAt(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>tsk2.completed_daily_task.updated_at</code>.
     */
    public Timestamp getUpdatedAt() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Date> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Date, Timestamp, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Date, Timestamp, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CompletedDailyTask.COMPLETED_DAILY_TASK.TASK_ID;
    }

    @Override
    public Field<Date> field2() {
        return CompletedDailyTask.COMPLETED_DAILY_TASK.TARGET_DATE;
    }

    @Override
    public Field<Timestamp> field3() {
        return CompletedDailyTask.COMPLETED_DAILY_TASK.CREATED_AT;
    }

    @Override
    public Field<Timestamp> field4() {
        return CompletedDailyTask.COMPLETED_DAILY_TASK.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getTaskId();
    }

    @Override
    public Date component2() {
        return getTargetDate();
    }

    @Override
    public Timestamp component3() {
        return getCreatedAt();
    }

    @Override
    public Timestamp component4() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getTaskId();
    }

    @Override
    public Date value2() {
        return getTargetDate();
    }

    @Override
    public Timestamp value3() {
        return getCreatedAt();
    }

    @Override
    public Timestamp value4() {
        return getUpdatedAt();
    }

    @Override
    public CompletedDailyTaskRecord value1(Long value) {
        setTaskId(value);
        return this;
    }

    @Override
    public CompletedDailyTaskRecord value2(Date value) {
        setTargetDate(value);
        return this;
    }

    @Override
    public CompletedDailyTaskRecord value3(Timestamp value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public CompletedDailyTaskRecord value4(Timestamp value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public CompletedDailyTaskRecord values(Long value1, Date value2, Timestamp value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompletedDailyTaskRecord
     */
    public CompletedDailyTaskRecord() {
        super(CompletedDailyTask.COMPLETED_DAILY_TASK);
    }

    /**
     * Create a detached, initialised CompletedDailyTaskRecord
     */
    public CompletedDailyTaskRecord(Long taskId, Date targetDate, Timestamp createdAt, Timestamp updatedAt) {
        super(CompletedDailyTask.COMPLETED_DAILY_TASK);

        set(0, taskId);
        set(1, targetDate);
        set(2, createdAt);
        set(3, updatedAt);
    }
}
